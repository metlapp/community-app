// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AccountScreen /> matches the snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "height": "100%",
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        Array [
          Object {
            "padding": 8,
          },
          Array [
            Object {
              "borderBottomColor": "#ddd",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
              "paddingLeft": 0,
              "paddingRight": 0,
            },
          ],
        ],
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginVertical": 6,
              "paddingLeft": 8,
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "fontSize": 16,
                },
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                },
                Array [
                  Object {
                    "left": -8,
                  },
                ],
              ],
            ]
          }
        >
          Personal Information
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        Array [
          Object {
            "padding": 8,
          },
          Array [
            Object {
              "borderBottomColor": "#ddd",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
              "paddingLeft": 0,
              "paddingRight": 0,
            },
          ],
        ],
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginVertical": 6,
              "paddingLeft": 8,
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "fontSize": 16,
                },
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                },
                Array [
                  Object {
                    "left": -8,
                  },
                ],
              ],
            ]
          }
        >
          Change Password
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        Array [
          Object {
            "padding": 8,
          },
          Array [
            Array [
              Object {
                "borderBottomColor": "#ddd",
                "borderBottomWidth": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "paddingLeft": 0,
                "paddingRight": 0,
              },
            ],
            Object {
              "borderTopColor": "#ddd",
              "borderTopWidth": 1,
              "marginTop": "auto",
            },
          ],
        ],
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginVertical": 6,
              "paddingLeft": 8,
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "fontSize": 16,
                },
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                },
                Array [
                  Object {
                    "left": -8,
                  },
                ],
              ],
            ]
          }
        >
          Terms of Service / Privacy Policy
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        Array [
          Object {
            "padding": 8,
          },
          Array [
            Object {
              "borderBottomColor": "#ddd",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
              "paddingLeft": 0,
              "paddingRight": 0,
            },
          ],
        ],
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginVertical": 6,
              "paddingLeft": 8,
            },
            Object {
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "fontSize": 16,
                },
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                },
                Array [
                  Object {
                    "left": -8,
                  },
                ],
              ],
            ]
          }
        >
          Log out
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<AccountScreen /> renders correctly, test using Jest + Enzyme 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "height": "100%",
    }
  }
>
  <AccountModal
    form=""
    hidemodal={[Function]}
    visibility={false}
  />
  <ListItem
    onPress={[Function]}
    title="Personal Information"
  />
  <ListItem
    onPress={[Function]}
    title="Change Password"
  />
  <ListItem
    bottom={true}
    title="Terms of Service / Privacy Policy"
  />
  <ListItem
    onPress={[Function]}
    title="Log out"
  />
</ForwardRef(SafeAreaView)>
`;
